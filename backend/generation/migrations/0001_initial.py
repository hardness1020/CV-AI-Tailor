# Generated by Django 4.2.24 on 2025-09-23 04:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CVTemplate",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("modern", "Modern"),
                            ("classic", "Classic"),
                            ("technical", "Technical"),
                            ("creative", "Creative"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("preview_image_url", models.URLField(blank=True)),
                ("template_config", models.JSONField(default=dict)),
                ("prompt_template", models.TextField()),
                ("is_premium", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="GeneratedDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[("cv", "CV/Resume"), ("cover_letter", "Cover Letter")],
                        default="cv",
                        max_length=20,
                    ),
                ),
                ("job_description_hash", models.CharField(max_length=64)),
                ("label_ids", models.JSONField(blank=True, default=list)),
                ("template_id", models.IntegerField(default=1)),
                ("custom_sections", models.JSONField(blank=True, default=dict)),
                ("generation_preferences", models.JSONField(blank=True, default=dict)),
                ("content", models.JSONField(blank=True, default=dict)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="processing",
                        max_length=20,
                    ),
                ),
                ("progress_percentage", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("artifacts_used", models.JSONField(blank=True, default=list)),
                ("model_version", models.CharField(blank=True, max_length=50)),
                ("generation_time_ms", models.IntegerField(blank=True, null=True)),
                ("user_rating", models.IntegerField(blank=True, null=True)),
                ("user_feedback", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobDescription",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("content_hash", models.CharField(max_length=64, unique=True)),
                ("raw_content", models.TextField()),
                ("parsed_data", models.JSONField(blank=True, default=dict)),
                ("company_name", models.CharField(blank=True, max_length=255)),
                ("role_title", models.CharField(blank=True, max_length=255)),
                ("parsing_confidence", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SkillsTaxonomy",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("skill_name", models.CharField(max_length=100, unique=True)),
                ("category", models.CharField(max_length=50)),
                ("aliases", models.JSONField(blank=True, default=list)),
                ("related_skills", models.JSONField(blank=True, default=list)),
                ("popularity_score", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Skills taxonomy",
            },
        ),
        migrations.CreateModel(
            name="GenerationFeedback",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("rating", "Rating"),
                            ("edit", "Content Edit"),
                            ("complaint", "Complaint"),
                            ("suggestion", "Suggestion"),
                        ],
                        max_length=50,
                    ),
                ),
                ("feedback_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "generation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="generation.generateddocument",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="generateddocument",
            name="job_description",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="generation.jobdescription",
            ),
        ),
        migrations.AddField(
            model_name="generateddocument",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="generated_documents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
